AEROCOM default regions (class ``Region``)
------------------------------------------

This notebook introduces how pya handles information related to default
regions (e.g. Europe, Asia, …) as used in the `AEROCOM
interface <http://aerocom.met.no/cgi-bin/AEROCOM/aerocom/surfobs_annualrs.pl>`__.
All default regions are defined in the file
`regions.ini <http://aerocom.met.no/pya/config_files.html#default-regions>`__.

.. code:: ipython3

    import pyaerocom as pya


.. parsed-literal::

    Initating pyaerocom configuration
    Checking database access...
    Checking access to: /lustre/storeA
    Access to lustre database: True
    Init data paths for lustre
    Expired time: 0.019 s


What regions are available
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: ipython3

    pya.region.all()




.. parsed-literal::

    ['WORLD',
     'EUROPE',
     'ASIA',
     'AUSTRALIA',
     'CHINA',
     'INDIA',
     'NAFRICA',
     'SAFRICA',
     'SAMERICA',
     'NAMERICA']



These region IDs can be used to access more information about the
regions (which is used throughout pyaerocom). For instance:

Create a ``Region``
~~~~~~~~~~~~~~~~~~~

.. code:: ipython3

    europe = pya.Region("EUROPE")
    print(europe)


.. parsed-literal::

    pyaeorocom Region
    Name: EUROPE
    Longitude range: [-20, 70]
    Latitude range: [30, 80]
    Longitude range (plots): [-20, 70]
    Latitude range (plots): [30, 80]


.. code:: ipython3

    asia = pya.Region("ASIA")
    print(asia)


.. parsed-literal::

    pyaeorocom Region
    Name: ASIA
    Longitude range: [40, 150]
    Latitude range: [0, 60]
    Longitude range (plots): [40, 150]
    Latitude range (plots): [0, 60]


Load example data and apply region specific crop
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In the following cell, we create an instance of the ``GriddedData``
class (hich is introduced in more detail in a later tutorial), load some
test data (from the CAMS ECMWF OSUITE dataset), crop it and plot a map
of the results over Europe.

.. code:: ipython3

    data = pya.GriddedData()
    data._init_testdata_default()
    crop = data.crop(region="EUROPE")
    fig = crop.quickplot_map()


.. parsed-literal::

    Overwriting unit unknown in cube od550aer with value "1"



.. image:: tut01_intro_regions/tut01_intro_regions_9_1.png


Computing distance to centre of region
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For a given lat / lon coordinate, distances to the region centre
coordinate can be computed as:

.. code:: ipython3

    dc = asia.distance_to_center(lat=45, lon=60)
    dc #km




.. parsed-literal::

    3476.358401761219



Access centre coordinate:

.. code:: ipython3

    asia.center_coordinate # (lat, lon)




.. parsed-literal::

    (30.0, 95.0)



.. code:: ipython3

    asia.distance_to_center(30, 95)




.. parsed-literal::

    0.0



That’s it. Not much more to say about regions until now.
