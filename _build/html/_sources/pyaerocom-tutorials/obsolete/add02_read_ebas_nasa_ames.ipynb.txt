{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Tutorial showing how to read EBAS NASA Ames files\n",
    "\n",
    "This low-level tutorial shows how to read an EBAS NASA Ames file using the class [EbasNasaAmesFile](https://pyaerocom.met.no/api.html?highlight=ebasnasaamesfile#pyaerocom.io.ebas_nasa_ames.EbasNasaAmesFile) of pyaerocom and how to access the import data and metadata. \n",
    "\n",
    "**NOTE**: variable names and names of metadata attributes below use the EBAS conventions and **not the AeroCom naming conventions**, since the purpose of the `EbasNasaAmesFile` reading routine is to solely import the content of the original data files (provided by EBAS) into a python interface. If you intend to use EBAS data for AeroCom purposes (e.g. model intercomparison), please use the [ReadEbas](https://pyaerocom.met.no/api.html?highlight=readebas#pyaerocom.io.read_ebas.ReadEbas) routine (or the [ReadUngridded](https://pyaerocom.met.no/api.html?highlight=readebas#module-pyaerocom.io.readungridded) factory class) which is doing the mapping to AeroCom naming conventions.\n",
    "\n",
    "Please see [here](https://ebas-submit.nilu.no/Submit-Data/Getting-started) for information related to the EBAS NASA Ames file format."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Initating pyaerocom configuration\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Checking database access...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Checking access to: /lustre/storeA\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Access to lustre database: True\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Init data paths for lustre\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Expired time: 0.022 s\n"
     ]
    }
   ],
   "source": [
    "import pyaerocom as pya\n",
    "import glob"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/lustre/storeA/project/aerocom/aerocom1/AEROCOM_OBSDATA/EBASMultiColumn/data/data/'"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ebasdir = pya.const.EBASMC_DATA_DIR\n",
    "ebasdir"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "files = glob.glob('{}DE0043G*2010*nephelometer*lev2.nas'.format(ebasdir))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No. of files found: 2\n"
     ]
    }
   ],
   "source": [
    "print('No. of files found: {}'.format(len(files)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/lustre/storeA/project/aerocom/aerocom1/AEROCOM_OBSDATA/EBASMultiColumn/data/data/DE0043G.20100201000000.20150304123917.nephelometer..pm10.11mo.1h.DE09L_TSI_Neph_3563.DE09L_scatt_NEPH.lev2.nas'"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "files[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Read the first file that was found:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pyaerocom EbasNasaAmesFile\n",
      "--------------------------\n",
      "\n",
      "num_head_lines: 91\n",
      "num_head_fmt: 1001\n",
      "data_originator: Flentje, Harald\n",
      "sponsor_organisation: DE09L, Deutscher Wetterdienst, DWD, Met. Obs., Hohenspeissenberg, , 82283, Hohenspeissenberg, Germany\n",
      "submitter: Flentje, Harald\n",
      "project_association: ACTRIS EMEP GAW-WDCA\n",
      "vol_num: 1\n",
      "vol_totnum: 1\n",
      "ref_date: 2010-01-01T00:00:00\n",
      "revision_date: 2015-03-04T00:00:00\n",
      "freq: 0.041667\n",
      "descr_time_unit: days from file reference point\n",
      "num_cols_dependent: 23\n",
      "mul_factors (list, 23 items): [1.00, 1.00, ..., 1.00, 1.00]\n",
      "vals_invalid (list, 23 items): [1000, 9999.0, ..., 9999.999999, 10.00]\n",
      "descr_first_col: end_time of measurement, days from the file reference point\n",
      "\n",
      "   Column variable definitions\n",
      "   -------------------------------\n",
      "   EbasColDef: name=starttime, unit=days, is_var=False, is_flag=False, flag_col=23, \n",
      "   EbasColDef: name=endtime, unit=days, is_var=False, is_flag=False, flag_col=23, \n",
      "   EbasColDef: name=pressure, unit=hPa, is_var=True, is_flag=False, flag_col=23, location=instrument internal, statistics=arithmetic mean, matrix=instrument, detection_limit=, detection_limit_expl.=, measurement_uncertainty=, measurement_uncertainty_expl.=, \n",
      "   EbasColDef: name=relative_humidity, unit=%, is_var=True, is_flag=False, flag_col=23, location=instrument internal, statistics=arithmetic mean, matrix=instrument, detection_limit=, detection_limit_expl.=, measurement_uncertainty=, measurement_uncertainty_expl.=, \n",
      "   EbasColDef: name=temperature, unit=K, is_var=True, is_flag=False, flag_col=23, location=instrument internal, statistics=arithmetic mean, matrix=instrument, detection_limit=, detection_limit_expl.=, measurement_uncertainty=, measurement_uncertainty_expl.=, \n",
      "   EbasColDef: name=aerosol_light_backscattering_coefficient, unit=1/Mm, is_var=True, is_flag=False, flag_col=23, wavelength=450.0 nm, statistics=arithmetic mean, \n",
      "   EbasColDef: name=aerosol_light_backscattering_coefficient, unit=1/Mm, is_var=True, is_flag=False, flag_col=23, wavelength=450.0 nm, statistics=percentile:15.87, \n",
      "   EbasColDef: name=aerosol_light_backscattering_coefficient, unit=1/Mm, is_var=True, is_flag=False, flag_col=23, wavelength=450.0 nm, statistics=percentile:84.13, \n",
      "   EbasColDef: name=aerosol_light_backscattering_coefficient, unit=1/Mm, is_var=True, is_flag=False, flag_col=23, wavelength=550.0 nm, statistics=arithmetic mean, \n",
      "   EbasColDef: name=aerosol_light_backscattering_coefficient, unit=1/Mm, is_var=True, is_flag=False, flag_col=23, wavelength=550.0 nm, statistics=percentile:15.87, \n",
      "   EbasColDef: name=aerosol_light_backscattering_coefficient, unit=1/Mm, is_var=True, is_flag=False, flag_col=23, wavelength=550.0 nm, statistics=percentile:84.13, \n",
      "   EbasColDef: name=aerosol_light_backscattering_coefficient, unit=1/Mm, is_var=True, is_flag=False, flag_col=23, wavelength=700.0 nm, statistics=arithmetic mean, \n",
      "   EbasColDef: name=aerosol_light_backscattering_coefficient, unit=1/Mm, is_var=True, is_flag=False, flag_col=23, wavelength=700.0 nm, statistics=percentile:15.87, \n",
      "   EbasColDef: name=aerosol_light_backscattering_coefficient, unit=1/Mm, is_var=True, is_flag=False, flag_col=23, wavelength=700.0 nm, statistics=percentile:84.13, \n",
      "   EbasColDef: name=aerosol_light_scattering_coefficient, unit=1/Mm, is_var=True, is_flag=False, flag_col=23, wavelength=450.0 nm, statistics=arithmetic mean, \n",
      "   EbasColDef: name=aerosol_light_scattering_coefficient, unit=1/Mm, is_var=True, is_flag=False, flag_col=23, wavelength=450.0 nm, statistics=percentile:15.87, \n",
      "   EbasColDef: name=aerosol_light_scattering_coefficient, unit=1/Mm, is_var=True, is_flag=False, flag_col=23, wavelength=450.0 nm, statistics=percentile:84.13, \n",
      "   EbasColDef: name=aerosol_light_scattering_coefficient, unit=1/Mm, is_var=True, is_flag=False, flag_col=23, wavelength=550.0 nm, statistics=arithmetic mean, \n",
      "   EbasColDef: name=aerosol_light_scattering_coefficient, unit=1/Mm, is_var=True, is_flag=False, flag_col=23, wavelength=550.0 nm, statistics=percentile:15.87, \n",
      "   EbasColDef: name=aerosol_light_scattering_coefficient, unit=1/Mm, is_var=True, is_flag=False, flag_col=23, wavelength=550.0 nm, statistics=percentile:84.13, \n",
      "   EbasColDef: name=aerosol_light_scattering_coefficient, unit=1/Mm, is_var=True, is_flag=False, flag_col=23, wavelength=700.0 nm, statistics=arithmetic mean, \n",
      "   EbasColDef: name=aerosol_light_scattering_coefficient, unit=1/Mm, is_var=True, is_flag=False, flag_col=23, wavelength=700.0 nm, statistics=percentile:15.87, \n",
      "   EbasColDef: name=aerosol_light_scattering_coefficient, unit=1/Mm, is_var=True, is_flag=False, flag_col=23, wavelength=700.0 nm, statistics=percentile:84.13, \n",
      "   EbasColDef: name=numflag, unit=no unit, is_var=False, is_flag=True, flag_col=None, \n",
      "\n",
      "   EBAS meta data\n",
      "   ------------------\n",
      "decode_flags: True\n",
      "data_definition: EBAS_1.1\n",
      "set_type_code: TU\n",
      "timezone: UTC\n",
      "file_name: DE0043G.20100201000000.20150304123917.nephelometer..pm10.11mo.1h.DE09L_TSI_Neph_3563.DE09L_scatt_NEPH.lev2.nas\n",
      "file_creation: 20190701194839\n",
      "startdate: 20100201000000\n",
      "revision_date: 20150304123917\n",
      "version: 1\n",
      "version_description: initial revision\n",
      "data_level: 2\n",
      "period_code: 11mo\n",
      "resolution_code: 1h\n",
      "sample_duration: 1h\n",
      "orig._time_res.: 10mn\n",
      "station_code: DE0043G\n",
      "platform_code: DE0043S\n",
      "station_name: Hohenpeissenberg\n",
      "station_wdca-id: GAWADE__HPB\n",
      "station_gaw-id: HPB\n",
      "station_gaw-name: Hohenpeissenberg\n",
      "station_land_use: Grassland\n",
      "station_setting: Mountain\n",
      "station_gaw_type: G\n",
      "station_wmo_region: 6\n",
      "station_latitude: 47.8014984131\n",
      "station_longitude: 11.0096197128\n",
      "station_altitude: 985.0 m\n",
      "measurement_height: 15.0 m\n",
      "regime: IMG\n",
      "component: \n",
      "unit: 1/Mm\n",
      "matrix: pm10\n",
      "laboratory_code: DE09L\n",
      "instrument_type: nephelometer\n",
      "instrument_name: TSI_Neph_3563\n",
      "instrument_manufacturer: TSI\n",
      "instrument_model: 3563\n",
      "method_ref: DE09L_scatt_NEPH\n",
      "standard_method: cal-gas=CO2+AIR_truncation-correction=Anderson1998\n",
      "inlet_type: Impactor--direct\n",
      "inlet_description: PM10 at ambient humidity inlet, Digitel, flow 170 l/min\n",
      "humidity/temperature_control: Nafion dryer\n",
      "volume_std._temperature: 273.15 K\n",
      "volume_std._pressure: 1013.25 hPa\n",
      "detection_limit: 0.3 1/Mm\n",
      "detection_limit_expl.: Determined only by instrument counting statistics, no detection limit flag used\n",
      "measurement_uncertainty: 0.3 1/Mm\n",
      "measurement_uncertainty_expl.: Determined only by instrument counting statistics, no detection limit flag used\n",
      "zero/negative_values: Zero values may appear due to statistical variations at very low concentrations\n",
      "originator: Flentje, Harald, Harald.Flentje@dwd.de, , , , , , , ,\n",
      "submitter: Flentje, Harald, Harald.Flentje@dwd.de, , , , , , , ,\n",
      "acknowledgement: Request acknowledgement details from data originator\n",
      "comment: Angstrom-based Anderson & Ogren 1998 corr used for truncation correction\n",
      "\n",
      "   Data\n",
      "   --------\n",
      "[[3.10000000e+01 3.10416660e+01            nan ...            nan\n",
      "             nan 9.99000000e-01]\n",
      " [3.10416670e+01 3.10833330e+01            nan ...            nan\n",
      "             nan 9.99000000e-01]\n",
      " [3.10833330e+01 3.11249990e+01            nan ...            nan\n",
      "             nan 9.99000000e-01]\n",
      " ...\n",
      " [3.64875000e+02 3.64916666e+02 9.04000000e+02 ... 1.35433110e+01\n",
      "  1.62446480e+01 1.00000000e-01]\n",
      " [3.64916667e+02 3.64958333e+02 9.04000000e+02 ... 1.13367710e+01\n",
      "  1.42932090e+01 1.00000000e-01]\n",
      " [3.64958333e+02 3.64999999e+02 9.03000000e+02 ... 1.13635590e+01\n",
      "  1.40839410e+01 1.00000000e-01]]\n",
      "Colnum: 24\n",
      "Timestamps: 8016\n"
     ]
    }
   ],
   "source": [
    "mc = pya.io.EbasNasaAmesFile(file=files[0],\n",
    "                             only_head=False,          #set True if you only want to import header\n",
    "                             replace_invalid_nan=True, #replace invalid values with NaNs\n",
    "                             convert_timestamps=True,  #compute datetime64 timestamps from numerical values\n",
    "                             decode_flags=True)        #decode all flags (e.g. 0.111222333 -> 111 222 333)\n",
    "                             \n",
    "print(mc)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The NASA Ames files are strucured in the same way as they are represented by in the instance of the EbasNasaAmesFile class. \n",
    "\n",
    "- A header with global metadata\n",
    "- One row that specifies multiplication factors for each data column (``mul_factors``)\n",
    "- One row that specifies NaN-equivalent values for each data column (``vals_invalid``)\n",
    "- A number of rows specifying metainformation for each data column in the file (i.e. 12 rows, if the data has 12 columns)\n",
    "- Dataset specific metadata \n",
    "- Data block: rows are timestamps, columns are different columns specified in the header (cf. 2 points above)\n",
    "\n",
    "    - Represented by 2D numpy array (``data`` attribute) where first index is row and second index is column\n",
    "    \n",
    "\n",
    "For details related to the file format [see here](https://ebas-submit.nilu.no/Submit-Data/Data-Reporting/Templates/Category/Aerosol/Aerosol-Optical-Depth)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(8016, 24)\n"
     ]
    }
   ],
   "source": [
    "print(mc.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Data array\n",
    "\n",
    "The data is imported as a 2D numpy array which is accessible via the `data` attribute:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[3.10000000e+01, 3.10416660e+01,            nan, ...,\n",
       "                   nan,            nan, 9.99000000e-01],\n",
       "       [3.10416670e+01, 3.10833330e+01,            nan, ...,\n",
       "                   nan,            nan, 9.99000000e-01],\n",
       "       [3.10833330e+01, 3.11249990e+01,            nan, ...,\n",
       "                   nan,            nan, 9.99000000e-01],\n",
       "       ...,\n",
       "       [3.64875000e+02, 3.64916666e+02, 9.04000000e+02, ...,\n",
       "        1.35433110e+01, 1.62446480e+01, 1.00000000e-01],\n",
       "       [3.64916667e+02, 3.64958333e+02, 9.04000000e+02, ...,\n",
       "        1.13367710e+01, 1.42932090e+01, 1.00000000e-01],\n",
       "       [3.64958333e+02, 3.64999999e+02, 9.03000000e+02, ...,\n",
       "        1.13635590e+01, 1.40839410e+01, 1.00000000e-01]])"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mc.data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The first index corresponds to the individual measurements (rows in file) and the second index corresponds to the individual columns that are stored in the file. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Column information\n",
    "\n",
    "Detailed information about each column can be accessed via the ``var_defs`` attribute, the first two columns are always the start and stop timestamps: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "EbasColDef: name=starttime, unit=days, is_var=False, is_flag=False, flag_col=23, "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mc.var_defs[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "EbasColDef: name=endtime, unit=days, is_var=False, is_flag=False, flag_col=23, "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mc.var_defs[1]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "After the start / stop columns follow the individual data columns."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "EbasColDef: name=pressure, unit=hPa, is_var=True, is_flag=False, flag_col=23, location=instrument internal, statistics=arithmetic mean, matrix=instrument, detection_limit=, detection_limit_expl.=, measurement_uncertainty=, measurement_uncertainty_expl.=, "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mc.var_defs[2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "EbasColDef: name=relative_humidity, unit=%, is_var=True, is_flag=False, flag_col=23, location=instrument internal, statistics=arithmetic mean, matrix=instrument, detection_limit=, detection_limit_expl.=, measurement_uncertainty=, measurement_uncertainty_expl.=, "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mc.var_defs[3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "EbasColDef: name=temperature, unit=K, is_var=True, is_flag=False, flag_col=23, location=instrument internal, statistics=arithmetic mean, matrix=instrument, detection_limit=, detection_limit_expl.=, measurement_uncertainty=, measurement_uncertainty_expl.=, "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mc.var_defs[4]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "EbasColDef: name=aerosol_light_backscattering_coefficient, unit=1/Mm, is_var=True, is_flag=False, flag_col=23, wavelength=450.0 nm, statistics=arithmetic mean, "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mc.var_defs[5]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In addition to the data columns in the files (such as time stamps, or measured values of a certain variable) there is **at least one** flag column in the data array and each data column has assigned one flag column (cf. output above where the index of the flag column for each data column is provided `flag_col=23`, i.e. column 23 is the flag column assigned to each of the 5 data columns that were displayed exemplary above:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "EbasColDef: name=numflag, unit=no unit, is_var=False, is_flag=True, flag_col=None, "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mc.var_defs[23]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The ``is_var`` attribute specifies, whether this column contains actual variable data or if it is a flag column. A NASA Ames file can have one or more flag columns that can be used to identify valid or invalid measurments. Each flag in a flag column comprises a floating point number that has encoded up to 3 3-digit numerical flags which are specified here:\n",
    "\n",
    "https://github.com/metno/pyaerocom/blob/master/pyaerocom/data/ebas_flags.csv\n",
    "\n",
    "More info about the flags follows below. You can see, that the column 4 printed above has assigned column 12 (index 11) as flag column.\n",
    "\n",
    "If you want to see an overview of all available columns in the file you may use the following command:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column 0\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: starttime\n",
      "unit: days\n",
      "is_var: False\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "\n",
      "Column 1\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: endtime\n",
      "unit: days\n",
      "is_var: False\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "\n",
      "Column 2\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: pressure\n",
      "unit: hPa\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "location: instrument internal\n",
      "statistics: arithmetic mean\n",
      "matrix: instrument\n",
      "detection_limit: \n",
      "detection_limit_expl.: \n",
      "measurement_uncertainty: \n",
      "measurement_uncertainty_expl.: \n",
      "\n",
      "Column 3\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: relative_humidity\n",
      "unit: %\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "location: instrument internal\n",
      "statistics: arithmetic mean\n",
      "matrix: instrument\n",
      "detection_limit: \n",
      "detection_limit_expl.: \n",
      "measurement_uncertainty: \n",
      "measurement_uncertainty_expl.: \n",
      "\n",
      "Column 4\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: temperature\n",
      "unit: K\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "location: instrument internal\n",
      "statistics: arithmetic mean\n",
      "matrix: instrument\n",
      "detection_limit: \n",
      "detection_limit_expl.: \n",
      "measurement_uncertainty: \n",
      "measurement_uncertainty_expl.: \n",
      "\n",
      "Column 5\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: aerosol_light_backscattering_coefficient\n",
      "unit: 1/Mm\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "wavelength: 450.0 nm\n",
      "statistics: arithmetic mean\n",
      "\n",
      "Column 6\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: aerosol_light_backscattering_coefficient\n",
      "unit: 1/Mm\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "wavelength: 450.0 nm\n",
      "statistics: percentile:15.87\n",
      "\n",
      "Column 7\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: aerosol_light_backscattering_coefficient\n",
      "unit: 1/Mm\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "wavelength: 450.0 nm\n",
      "statistics: percentile:84.13\n",
      "\n",
      "Column 8\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: aerosol_light_backscattering_coefficient\n",
      "unit: 1/Mm\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "wavelength: 550.0 nm\n",
      "statistics: arithmetic mean\n",
      "\n",
      "Column 9\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: aerosol_light_backscattering_coefficient\n",
      "unit: 1/Mm\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "wavelength: 550.0 nm\n",
      "statistics: percentile:15.87\n",
      "\n",
      "Column 10\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: aerosol_light_backscattering_coefficient\n",
      "unit: 1/Mm\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "wavelength: 550.0 nm\n",
      "statistics: percentile:84.13\n",
      "\n",
      "Column 11\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: aerosol_light_backscattering_coefficient\n",
      "unit: 1/Mm\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "wavelength: 700.0 nm\n",
      "statistics: arithmetic mean\n",
      "\n",
      "Column 12\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: aerosol_light_backscattering_coefficient\n",
      "unit: 1/Mm\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "wavelength: 700.0 nm\n",
      "statistics: percentile:15.87\n",
      "\n",
      "Column 13\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: aerosol_light_backscattering_coefficient\n",
      "unit: 1/Mm\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "wavelength: 700.0 nm\n",
      "statistics: percentile:84.13\n",
      "\n",
      "Column 14\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: aerosol_light_scattering_coefficient\n",
      "unit: 1/Mm\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "wavelength: 450.0 nm\n",
      "statistics: arithmetic mean\n",
      "\n",
      "Column 15\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: aerosol_light_scattering_coefficient\n",
      "unit: 1/Mm\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "wavelength: 450.0 nm\n",
      "statistics: percentile:15.87\n",
      "\n",
      "Column 16\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: aerosol_light_scattering_coefficient\n",
      "unit: 1/Mm\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "wavelength: 450.0 nm\n",
      "statistics: percentile:84.13\n",
      "\n",
      "Column 17\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: aerosol_light_scattering_coefficient\n",
      "unit: 1/Mm\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "wavelength: 550.0 nm\n",
      "statistics: arithmetic mean\n",
      "\n",
      "Column 18\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: aerosol_light_scattering_coefficient\n",
      "unit: 1/Mm\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "wavelength: 550.0 nm\n",
      "statistics: percentile:15.87\n",
      "\n",
      "Column 19\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: aerosol_light_scattering_coefficient\n",
      "unit: 1/Mm\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "wavelength: 550.0 nm\n",
      "statistics: percentile:84.13\n",
      "\n",
      "Column 20\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: aerosol_light_scattering_coefficient\n",
      "unit: 1/Mm\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "wavelength: 700.0 nm\n",
      "statistics: arithmetic mean\n",
      "\n",
      "Column 21\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: aerosol_light_scattering_coefficient\n",
      "unit: 1/Mm\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "wavelength: 700.0 nm\n",
      "statistics: percentile:15.87\n",
      "\n",
      "Column 22\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: aerosol_light_scattering_coefficient\n",
      "unit: 1/Mm\n",
      "is_var: True\n",
      "is_flag: False\n",
      "flag_col: 23\n",
      "wavelength: 700.0 nm\n",
      "statistics: percentile:84.13\n",
      "\n",
      "Column 23\n",
      "Pyaerocom EbasColDef\n",
      "--------------------\n",
      "name: numflag\n",
      "unit: no unit\n",
      "is_var: False\n",
      "is_flag: True\n",
      "flag_col: None\n",
      "\n"
     ]
    }
   ],
   "source": [
    "mc.print_col_info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can see that all variable columns were assigned the same flag column, since there is only one flag column at the end (index 23). This would be different if there were multiple flag columns (e.g. one for each variable).\n",
    "\n",
    "#### Access flag information\n",
    "\n",
    "You can access the flags for each column using the ``flag_col_info`` attribute of the file (and the key of the respective flag column, that you want to access, here->11)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<pyaerocom.io.ebas_nasa_ames.EbasFlagCol at 0x7f11494eb2b0>"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "flagcol = mc.flag_col_info[23]\n",
    "flagcol"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The raw flags can be accessed via:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.999, 0.999, 0.999, ..., 0.1  , 0.1  , 0.1  ])"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "flagcol.raw_data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And the processed flags are in stored in a (Nx3) numpy array where N is the total number of timestamps."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[999,   0,   0],\n",
       "       [999,   0,   0],\n",
       "       [999,   0,   0],\n",
       "       ...,\n",
       "       [100,   0,   0],\n",
       "       [100,   0,   0],\n",
       "       [100,   0,   0]])"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "flagcol.decoded"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For instance, access the flags of the 5 timestamp:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([999,   0,   0])"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "flagcol.decoded[4]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This timestamp contains 1 (of the possible up to 3) flags: 999.\n",
    "\n",
    "Validity of a combination of the flags can be directly accessed via:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "flagcol.valid[4]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This flag (999) evaluates to an invalid measurement. Looking into [the flag definition file](https://github.com/metno/pyaerocom/blob/master/pyaerocom/data/ebas_flags.csv) we see that these two flags have the following meaning:\n",
    "\n",
    "- 999,'Missing measurement, unspecified reason','M'\n",
    "\n",
    "where the last string specifies if this flag is valid (V) or invalid (I) or missing (M)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Convert object to pandas Dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>starttime_days</th>\n",
       "      <th>endtime_days</th>\n",
       "      <th>pressure_hPa_instrument_arithmetic mean</th>\n",
       "      <th>relative_humidity_%_instrument_arithmetic mean</th>\n",
       "      <th>temperature_K_instrument_arithmetic mean</th>\n",
       "      <th>aerosol_light_backscattering_coefficient_1/Mm_450.0nm_arithmetic mean</th>\n",
       "      <th>aerosol_light_backscattering_coefficient_1/Mm_450.0nm_percentile:15.87</th>\n",
       "      <th>aerosol_light_backscattering_coefficient_1/Mm_450.0nm_percentile:84.13</th>\n",
       "      <th>aerosol_light_backscattering_coefficient_1/Mm_550.0nm_arithmetic mean</th>\n",
       "      <th>aerosol_light_backscattering_coefficient_1/Mm_550.0nm_percentile:15.87</th>\n",
       "      <th>...</th>\n",
       "      <th>aerosol_light_scattering_coefficient_1/Mm_450.0nm_arithmetic mean</th>\n",
       "      <th>aerosol_light_scattering_coefficient_1/Mm_450.0nm_percentile:15.87</th>\n",
       "      <th>aerosol_light_scattering_coefficient_1/Mm_450.0nm_percentile:84.13</th>\n",
       "      <th>aerosol_light_scattering_coefficient_1/Mm_550.0nm_arithmetic mean</th>\n",
       "      <th>aerosol_light_scattering_coefficient_1/Mm_550.0nm_percentile:15.87</th>\n",
       "      <th>aerosol_light_scattering_coefficient_1/Mm_550.0nm_percentile:84.13</th>\n",
       "      <th>aerosol_light_scattering_coefficient_1/Mm_700.0nm_arithmetic mean</th>\n",
       "      <th>aerosol_light_scattering_coefficient_1/Mm_700.0nm_percentile:15.87</th>\n",
       "      <th>aerosol_light_scattering_coefficient_1/Mm_700.0nm_percentile:84.13</th>\n",
       "      <th>numflag_no unit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2010-02-01 00:29:59</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>31.041666</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2010-02-01 01:29:59</td>\n",
       "      <td>31.041667</td>\n",
       "      <td>31.083333</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2010-02-01 02:29:59</td>\n",
       "      <td>31.083333</td>\n",
       "      <td>31.124999</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2010-02-01 03:29:59</td>\n",
       "      <td>31.125000</td>\n",
       "      <td>31.166666</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2010-02-01 04:29:59</td>\n",
       "      <td>31.166667</td>\n",
       "      <td>31.208333</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.999</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 24 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                     starttime_days  endtime_days  \\\n",
       "2010-02-01 00:29:59       31.000000     31.041666   \n",
       "2010-02-01 01:29:59       31.041667     31.083333   \n",
       "2010-02-01 02:29:59       31.083333     31.124999   \n",
       "2010-02-01 03:29:59       31.125000     31.166666   \n",
       "2010-02-01 04:29:59       31.166667     31.208333   \n",
       "\n",
       "                     pressure_hPa_instrument_arithmetic mean  \\\n",
       "2010-02-01 00:29:59                                      NaN   \n",
       "2010-02-01 01:29:59                                      NaN   \n",
       "2010-02-01 02:29:59                                      NaN   \n",
       "2010-02-01 03:29:59                                      NaN   \n",
       "2010-02-01 04:29:59                                      NaN   \n",
       "\n",
       "                     relative_humidity_%_instrument_arithmetic mean  \\\n",
       "2010-02-01 00:29:59                                             NaN   \n",
       "2010-02-01 01:29:59                                             NaN   \n",
       "2010-02-01 02:29:59                                             NaN   \n",
       "2010-02-01 03:29:59                                             NaN   \n",
       "2010-02-01 04:29:59                                             NaN   \n",
       "\n",
       "                     temperature_K_instrument_arithmetic mean  \\\n",
       "2010-02-01 00:29:59                                       NaN   \n",
       "2010-02-01 01:29:59                                       NaN   \n",
       "2010-02-01 02:29:59                                       NaN   \n",
       "2010-02-01 03:29:59                                       NaN   \n",
       "2010-02-01 04:29:59                                       NaN   \n",
       "\n",
       "                     aerosol_light_backscattering_coefficient_1/Mm_450.0nm_arithmetic mean  \\\n",
       "2010-02-01 00:29:59                                                NaN                       \n",
       "2010-02-01 01:29:59                                                NaN                       \n",
       "2010-02-01 02:29:59                                                NaN                       \n",
       "2010-02-01 03:29:59                                                NaN                       \n",
       "2010-02-01 04:29:59                                                NaN                       \n",
       "\n",
       "                     aerosol_light_backscattering_coefficient_1/Mm_450.0nm_percentile:15.87  \\\n",
       "2010-02-01 00:29:59                                                NaN                        \n",
       "2010-02-01 01:29:59                                                NaN                        \n",
       "2010-02-01 02:29:59                                                NaN                        \n",
       "2010-02-01 03:29:59                                                NaN                        \n",
       "2010-02-01 04:29:59                                                NaN                        \n",
       "\n",
       "                     aerosol_light_backscattering_coefficient_1/Mm_450.0nm_percentile:84.13  \\\n",
       "2010-02-01 00:29:59                                                NaN                        \n",
       "2010-02-01 01:29:59                                                NaN                        \n",
       "2010-02-01 02:29:59                                                NaN                        \n",
       "2010-02-01 03:29:59                                                NaN                        \n",
       "2010-02-01 04:29:59                                                NaN                        \n",
       "\n",
       "                     aerosol_light_backscattering_coefficient_1/Mm_550.0nm_arithmetic mean  \\\n",
       "2010-02-01 00:29:59                                                NaN                       \n",
       "2010-02-01 01:29:59                                                NaN                       \n",
       "2010-02-01 02:29:59                                                NaN                       \n",
       "2010-02-01 03:29:59                                                NaN                       \n",
       "2010-02-01 04:29:59                                                NaN                       \n",
       "\n",
       "                     aerosol_light_backscattering_coefficient_1/Mm_550.0nm_percentile:15.87  \\\n",
       "2010-02-01 00:29:59                                                NaN                        \n",
       "2010-02-01 01:29:59                                                NaN                        \n",
       "2010-02-01 02:29:59                                                NaN                        \n",
       "2010-02-01 03:29:59                                                NaN                        \n",
       "2010-02-01 04:29:59                                                NaN                        \n",
       "\n",
       "                     ...  \\\n",
       "2010-02-01 00:29:59  ...   \n",
       "2010-02-01 01:29:59  ...   \n",
       "2010-02-01 02:29:59  ...   \n",
       "2010-02-01 03:29:59  ...   \n",
       "2010-02-01 04:29:59  ...   \n",
       "\n",
       "                     aerosol_light_scattering_coefficient_1/Mm_450.0nm_arithmetic mean  \\\n",
       "2010-02-01 00:29:59                                                NaN                   \n",
       "2010-02-01 01:29:59                                                NaN                   \n",
       "2010-02-01 02:29:59                                                NaN                   \n",
       "2010-02-01 03:29:59                                                NaN                   \n",
       "2010-02-01 04:29:59                                                NaN                   \n",
       "\n",
       "                     aerosol_light_scattering_coefficient_1/Mm_450.0nm_percentile:15.87  \\\n",
       "2010-02-01 00:29:59                                                NaN                    \n",
       "2010-02-01 01:29:59                                                NaN                    \n",
       "2010-02-01 02:29:59                                                NaN                    \n",
       "2010-02-01 03:29:59                                                NaN                    \n",
       "2010-02-01 04:29:59                                                NaN                    \n",
       "\n",
       "                     aerosol_light_scattering_coefficient_1/Mm_450.0nm_percentile:84.13  \\\n",
       "2010-02-01 00:29:59                                                NaN                    \n",
       "2010-02-01 01:29:59                                                NaN                    \n",
       "2010-02-01 02:29:59                                                NaN                    \n",
       "2010-02-01 03:29:59                                                NaN                    \n",
       "2010-02-01 04:29:59                                                NaN                    \n",
       "\n",
       "                     aerosol_light_scattering_coefficient_1/Mm_550.0nm_arithmetic mean  \\\n",
       "2010-02-01 00:29:59                                                NaN                   \n",
       "2010-02-01 01:29:59                                                NaN                   \n",
       "2010-02-01 02:29:59                                                NaN                   \n",
       "2010-02-01 03:29:59                                                NaN                   \n",
       "2010-02-01 04:29:59                                                NaN                   \n",
       "\n",
       "                     aerosol_light_scattering_coefficient_1/Mm_550.0nm_percentile:15.87  \\\n",
       "2010-02-01 00:29:59                                                NaN                    \n",
       "2010-02-01 01:29:59                                                NaN                    \n",
       "2010-02-01 02:29:59                                                NaN                    \n",
       "2010-02-01 03:29:59                                                NaN                    \n",
       "2010-02-01 04:29:59                                                NaN                    \n",
       "\n",
       "                     aerosol_light_scattering_coefficient_1/Mm_550.0nm_percentile:84.13  \\\n",
       "2010-02-01 00:29:59                                                NaN                    \n",
       "2010-02-01 01:29:59                                                NaN                    \n",
       "2010-02-01 02:29:59                                                NaN                    \n",
       "2010-02-01 03:29:59                                                NaN                    \n",
       "2010-02-01 04:29:59                                                NaN                    \n",
       "\n",
       "                     aerosol_light_scattering_coefficient_1/Mm_700.0nm_arithmetic mean  \\\n",
       "2010-02-01 00:29:59                                                NaN                   \n",
       "2010-02-01 01:29:59                                                NaN                   \n",
       "2010-02-01 02:29:59                                                NaN                   \n",
       "2010-02-01 03:29:59                                                NaN                   \n",
       "2010-02-01 04:29:59                                                NaN                   \n",
       "\n",
       "                     aerosol_light_scattering_coefficient_1/Mm_700.0nm_percentile:15.87  \\\n",
       "2010-02-01 00:29:59                                                NaN                    \n",
       "2010-02-01 01:29:59                                                NaN                    \n",
       "2010-02-01 02:29:59                                                NaN                    \n",
       "2010-02-01 03:29:59                                                NaN                    \n",
       "2010-02-01 04:29:59                                                NaN                    \n",
       "\n",
       "                     aerosol_light_scattering_coefficient_1/Mm_700.0nm_percentile:84.13  \\\n",
       "2010-02-01 00:29:59                                                NaN                    \n",
       "2010-02-01 01:29:59                                                NaN                    \n",
       "2010-02-01 02:29:59                                                NaN                    \n",
       "2010-02-01 03:29:59                                                NaN                    \n",
       "2010-02-01 04:29:59                                                NaN                    \n",
       "\n",
       "                     numflag_no unit  \n",
       "2010-02-01 00:29:59            0.999  \n",
       "2010-02-01 01:29:59            0.999  \n",
       "2010-02-01 02:29:59            0.999  \n",
       "2010-02-01 03:29:59            0.999  \n",
       "2010-02-01 04:29:59            0.999  \n",
       "\n",
       "[5 rows x 24 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = mc.to_dataframe()\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### You may also apply selection constraints when converting to a DataFrame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>aerosol_light_scattering_coefficient_1/Mm_450.0nm_arithmetic mean</th>\n",
       "      <th>aerosol_light_scattering_coefficient_1/Mm_550.0nm_arithmetic mean</th>\n",
       "      <th>aerosol_light_scattering_coefficient_1/Mm_700.0nm_arithmetic mean</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2010-02-01 00:29:59</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2010-02-01 01:29:59</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2010-02-01 02:29:59</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2010-02-01 03:29:59</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2010-02-01 04:29:59</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2010-12-31 19:29:59</td>\n",
       "      <td>29.312950</td>\n",
       "      <td>19.707840</td>\n",
       "      <td>13.09690</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2010-12-31 20:29:59</td>\n",
       "      <td>28.166000</td>\n",
       "      <td>19.270330</td>\n",
       "      <td>11.51522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2010-12-31 21:29:59</td>\n",
       "      <td>36.854919</td>\n",
       "      <td>25.116589</td>\n",
       "      <td>14.89398</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2010-12-31 22:29:59</td>\n",
       "      <td>30.724499</td>\n",
       "      <td>21.249210</td>\n",
       "      <td>12.81499</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2010-12-31 23:29:59</td>\n",
       "      <td>28.431919</td>\n",
       "      <td>20.387381</td>\n",
       "      <td>12.72375</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8016 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                     aerosol_light_scattering_coefficient_1/Mm_450.0nm_arithmetic mean  \\\n",
       "2010-02-01 00:29:59                                                NaN                   \n",
       "2010-02-01 01:29:59                                                NaN                   \n",
       "2010-02-01 02:29:59                                                NaN                   \n",
       "2010-02-01 03:29:59                                                NaN                   \n",
       "2010-02-01 04:29:59                                                NaN                   \n",
       "...                                                                ...                   \n",
       "2010-12-31 19:29:59                                          29.312950                   \n",
       "2010-12-31 20:29:59                                          28.166000                   \n",
       "2010-12-31 21:29:59                                          36.854919                   \n",
       "2010-12-31 22:29:59                                          30.724499                   \n",
       "2010-12-31 23:29:59                                          28.431919                   \n",
       "\n",
       "                     aerosol_light_scattering_coefficient_1/Mm_550.0nm_arithmetic mean  \\\n",
       "2010-02-01 00:29:59                                                NaN                   \n",
       "2010-02-01 01:29:59                                                NaN                   \n",
       "2010-02-01 02:29:59                                                NaN                   \n",
       "2010-02-01 03:29:59                                                NaN                   \n",
       "2010-02-01 04:29:59                                                NaN                   \n",
       "...                                                                ...                   \n",
       "2010-12-31 19:29:59                                          19.707840                   \n",
       "2010-12-31 20:29:59                                          19.270330                   \n",
       "2010-12-31 21:29:59                                          25.116589                   \n",
       "2010-12-31 22:29:59                                          21.249210                   \n",
       "2010-12-31 23:29:59                                          20.387381                   \n",
       "\n",
       "                     aerosol_light_scattering_coefficient_1/Mm_700.0nm_arithmetic mean  \n",
       "2010-02-01 00:29:59                                                NaN                  \n",
       "2010-02-01 01:29:59                                                NaN                  \n",
       "2010-02-01 02:29:59                                                NaN                  \n",
       "2010-02-01 03:29:59                                                NaN                  \n",
       "2010-02-01 04:29:59                                                NaN                  \n",
       "...                                                                ...                  \n",
       "2010-12-31 19:29:59                                           13.09690                  \n",
       "2010-12-31 20:29:59                                           11.51522                  \n",
       "2010-12-31 21:29:59                                           14.89398                  \n",
       "2010-12-31 22:29:59                                           12.81499                  \n",
       "2010-12-31 23:29:59                                           12.72375                  \n",
       "\n",
       "[8016 rows x 3 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scattering = mc.to_dataframe('aerosol_light_scattering_coefficient', statistics='arithmetic mean')\n",
    "scattering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f11494752e8>"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "scattering.plot(figsize=(16,8))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
