{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  Gridded model profile data: how AeroCom \"ModelLevel\" files should be prepared\n",
    "\n",
    "This notebook shows an example 4D AeroCom model data file that contains aerosol extinction coefficients and how such files should be prepared, such that pyaerocom can convert the model levels to altitude levels."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Initating pyaerocom configuration\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Checking database access...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Checking access to: /lustre/storeA\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Access to lustre database: True\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Init data paths for lustre\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Expired time: 0.021 s\n"
     ]
    }
   ],
   "source": [
    "import pyaerocom as pya\n",
    "pya.change_verbosity('info')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2019-10-03 18:11:11,374:INFO:\n",
      "Searching database for GISS-MATRIX_GLOFIR0p5\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2019-10-03 18:11:11,622:INFO:\n",
      "Checking if renamed directory exists\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2019-10-03 18:11:11,627:INFO:\n",
      "Found match for ID GISS-MATRIX_GLOFIR0p5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Pyaerocom ReadGridded\n",
      "---------------------\n",
      "Data ID: GISS-MATRIX_GLOFIR0p5\n",
      "Data directory: /lustre/storeA/project/aerocom/aerocom-users-database/AEROCOM-PHASE-III/GISS-MATRIX_GLOFIR0p5/renamed\n",
      "Available experiments: ['GLOFIR0p5']\n",
      "Available years: [2008]\n",
      "Available frequencies ['3hourly' 'daily' 'monthly']\n",
      "Available variables: ['abs550aer', 'abs550aercs', 'dh', 'drybc', 'drydust', 'drynh4', 'dryno3', 'dryoa', 'dryso2', 'dryss', 'ec550aer', 'emibc', 'emidms', 'emidust', 'emioa', 'emiso2', 'emiso4', 'emisoa', 'emiss', 'hus', 'mmrbc', 'mmrdust', 'mmrnh4', 'mmrno3', 'mmroa', 'mmrso4', 'mmrss', 'od550aer', 'od550aercs', 'ps', 'rh', 'ta', 'ts', 'uas', 'vas', 'was', 'wetbc', 'wetdust', 'wetnh4', 'wetno3', 'wetoa', 'wetso2', 'wetso4', 'wetss']\n"
     ]
    }
   ],
   "source": [
    "model_reader = pya.io.ReadGridded('GISS-MATRIX_GLOFIR0p5') \n",
    "print(model_reader)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2019-10-03 18:11:16,076:WARNING:\n",
      "File /lustre/storeA/project/aerocom/aerocom-users-database/AEROCOM-PHASE-III/GISS-MATRIX_GLOFIR0p5/renamed/aerocom3_GISS-MATRIX_GLOFIR0p5_ec550aer_ModelLevel_2008_daily.nc contains more than one variable\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2019-10-03 18:11:16,106:INFO:\n",
      "Importing variable aliases info\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2019-10-03 18:11:16,108:INFO:\n",
      "Found default configuration for variable ec550aer\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2019-10-03 18:11:16,114:INFO:\n",
      "Importing variable aliases info\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2019-10-03 18:11:16,115:INFO:\n",
      "Found default configuration for variable lon\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2019-10-03 18:11:16,116:INFO:\n",
      "Found default configuration for variable lat\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2019-10-03 18:11:16,117:INFO:\n",
      "Found default configuration for variable time\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2019-10-03 18:11:16,117:WARNING:\n",
      "Invalid long_name time for coord time in cube. Overwriting with Time\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2019-10-03 18:11:16,117:WARNING:\n",
      "Invalid long_name latitude for coord lat in cube. Overwriting with Center coordinates for latitudes\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2019-10-03 18:11:16,118:WARNING:\n",
      "Invalid long_name longitude for coord lon in cube. Overwriting with Center coordinates for longitudes\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2019-10-03 18:11:16,118:INFO:\n",
      "Rolling longitudes to -180 -> 180 definition\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2019-10-03 18:11:22,473:INFO:\n",
      "Found default configuration for variable ec550aer\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2019-10-03 18:11:22,474:INFO:\n",
      "Found default configuration for variable ec550aer\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2019-10-03 18:11:22,475:INFO:\n",
      "Attempting unit conversion from m-1 to 1/Mm\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2019-10-03 18:11:22,493:WARNING:\n",
      "Deprecated attribute name, please use data_id instead\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "pyaerocom.GriddedData: GISS-MATRIX_GLOFIR0p5\n",
      "Grid data: Aerosol Extinction @550nm                                (time: 365; atmosphere_hybrid_sigma_pressure_coordinate: 40; latitude: 90; longitude: 144)\n",
      "     Dimension coordinates:\n",
      "          time                                                x                                                 -             -              -\n",
      "          atmosphere_hybrid_sigma_pressure_coordinate         -                                                 x             -              -\n",
      "          latitude                                            -                                                 -             x              -\n",
      "          longitude                                           -                                                 -             -              x\n",
      "     Auxiliary coordinates:\n",
      "          surface_air_pressure                                x                                                 -             x              x\n",
      "          hybrid sigma coordinate A coefficient for layer     -                                                 x             -              -\n",
      "          hybrid sigma coordinate B coefficient for layer     -                                                 x             -              -\n",
      "          vertical pressure                                   -                                                 x             -              -\n",
      "     Derived coordinates:\n",
      "          air_pressure                                        x                                                 x             x              x\n",
      "     Scalar coordinates:\n",
      "          reference pressure for hybrid sigma coordinate: 100000.0 Pa\n",
      "     Attributes:\n",
      "          Conventions: CF-1.3\n",
      "          associated_files: gridspecFile: gridspec_REALM_fx_GISS-MATRIX-GLOFIR0p5_r0i0p0.nc\n",
      "          branch_time: 0.0\n",
      "          cmor_version: 2.5.7\n",
      "          computed: False\n",
      "          concatenated: False\n",
      "          contact: Kenneth Lo (cdkkl@giss.nasa.gov)\n",
      "          creation_date: 2017-03-09T23:41:42Z\n",
      "          data_id: GISS-MATRIX_GLOFIR0p5\n",
      "          experiment: GLOFIR0p5\n",
      "          experiment_id: GLOFIR0p5\n",
      "          forcing: N/A\n",
      "          frequency: day\n",
      "          from_files: ['/lustre/storeA/project/aerocom/aerocom-users-database/AEROCOM-PHASE-...\n",
      "          history: 2017-03-09T23:41:42Z altered by CMOR: replaced missing value flag (-1e+30)...\n",
      "          initialization_method: 1\n",
      "          institute_id: NASA-GISS\n",
      "          institution: NASA/GISS (Goddard Institute for Space Studies) New York, NY\n",
      "          invalid_standard_name: volume_extinction_coeffcient_in_air_due_to_ambient_aerosol_particles\n",
      "          model_id: GISS-MATRIX-GLOFIR0p5\n",
      "          modeling_realm: REALM\n",
      "          original_name: ec550aer\n",
      "          outliers_removed: False\n",
      "          parent_experiment: N/A\n",
      "          parent_experiment_id: N/A\n",
      "          parent_experiment_rip: N/A\n",
      "          physics_version: 1\n",
      "          product: output\n",
      "          project_id: AEROCOM-ACC\n",
      "          reader: None\n",
      "          realization: 1\n",
      "          references: http://data.giss.nasa.gov/modelE/ar5\n",
      "          region: None\n",
      "          regridded: False\n",
      "          source: GISS-MATRIX-GLOFIR0p5-MATRIXEQSAM_AEROBB2s Atmosphere: GISS-E2; Ocean:...\n",
      "          table_id: Table 3D-D (July 2009) 6053da228d695447dc6f66720d2bf9f8\n",
      "          title: GISS-MATRIX-GLOFIR0p5 model output prepared for AEROCOM-ACC GLOFIR0p5\n",
      "          tracking_id: 10b022b3-0597-490f-8d97-24c074853a57\n",
      "          ts_type: daily\n",
      "          var_name_read: n/d\n",
      "     Cell methods:\n",
      "          mean: time\n"
     ]
    }
   ],
   "source": [
    "data = model_reader.read_var('ec550aer', ts_type='daily', vert_which='ModelLevel')\n",
    "print(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
